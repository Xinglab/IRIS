#!/bin/bash
#
# Install dependencies
#
function install_iedb() {
  echo
  echo "checking IEDB dependency"

  # From IEDB/mhc_i/README: tcsh and gawk are required
  which tcsh
  if [[ "$?" -ne 0 ]]; then
    echo "IEDB requires tcsh to be installed" >&2
    return 1
  fi
  which gawk
  if [[ "$?" -ne 0 ]]; then
    echo "IEDB requires gawk to be installed" >&2
    return 1
  fi

  cd "${SCRIPT_DIR}/IEDB" || return 1

  if [[ ! -d mhc_i ]]
  then
    tar -xvf IEDB_MHC_I-2.15.5.tar.gz || return 1
  fi

  cd mhc_i || return 1

  # The IEDB ./configure script unpacks .tar files which can take a long time.
  # Create a .done file to indicate that ./configure has already been run.
  # Only run ./configure if there's no .done file
  local DONE_FILE='configure.done'
  if [[ ! -f "${DONE_FILE}" ]]; then
    # Need to activate Python 2 environment so that '/usr/bin/env python' used in
    #   ./configure finds python 2. Otherwise there is a syntax error.
    conda activate "${CONDA_ENV_PREFIX_2}" || return 1
    ./configure || return 1
    conda deactivate || return 1
    touch "${DONE_FILE}" || return 1
  fi
}

function install_ms_gf() {
  echo
  echo "checking MS GF+ dependency"

  cd "${SCRIPT_DIR}" || return 1

  if [[ ! -d ms_gf_plus ]]
  then
    mkdir ms_gf_plus || return 1
  fi

  cd ms_gf_plus || return 1

  if [[ ! -f MSGFPlus_v20190703.zip ]]
  then
    local MSGF_URI="https://github.com/MSGFPlus/msgfplus/releases/download/v2019.07.03/MSGFPlus_v20190703.zip"
    curl -L "${MSGF_URI}" -o MSGFPlus_v20190703.zip || return 1
  fi

  if [[ ! -f README.md ]]
  then
    unzip MSGFPlus_v20190703.zip || return 1
  fi
}

function install_python_packages() {
  local INSTALL_OPTIONAL="$1"
  echo
  echo "checking python dependencies"

  cd "${SCRIPT_DIR}" || return 1

  # rmats is an optional dependency.
  # Record the path if it is installed.
  local RMATS_PATH=''

  # Python 2
  conda activate "${CONDA_ENV_PREFIX_2}" || return 1
  if [[ "${INSTALL_OPTIONAL}" -ne 0 ]]; then
    conda install -c conda-forge -c bioconda --file conda_requirements_py2.txt \
          --file conda_requirements_py2_optional.txt || return 1
    # Find the rmats path needed to pass as --rMATS-path to IRIS
    RMATS_PATH="$(which rmats.py)"
    if [[ "$?" -ne 0 ]]; then
      echo "could not find path to rmats.py" >&2
      exit 1
    fi
  else
    conda install -c conda-forge -c bioconda --file conda_requirements_py2.txt || return 1
  fi

  # rmats_path will be '' if optional dependencies were not installed
  echo "rmats_path: '${RMATS_PATH}'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1

  conda deactivate || return 1

  # Python 3
  conda activate "${CONDA_ENV_PREFIX_3}" || return 1
  conda install -c conda-forge -c bioconda --file conda_requirements_py3.txt || return 1
  conda deactivate || return 1
}

function check_iris_data() {
  echo
  echo "checking IRIS data dependency"

  cd "${SCRIPT_DIR}" || return 1

  if [[ ! -d IRIS_data ]]
  then
    echo "Need to download IRIS_data/" >&2
  fi
}

function install_iris_package() {
  echo
  echo "installing IRIS"

  cd "${SCRIPT_DIR}" || return 1

  conda activate "${CONDA_ENV_PREFIX_2}" || return 1
  python setup.py install || return 1
  conda deactivate || return 1
}

function ensure_conda_envs() {
  echo
  echo "checking conda"

  conda create --prefix "${CONDA_ENV_PREFIX_2}" || return 1
  conda create --prefix "${CONDA_ENV_PREFIX_3}" || return 1
}

function install_optional() {
  install_ms_gf
  if [[ "$?" -ne 0 ]]; then
    echo "Error installing optional dependency: ms gf" >&2
  fi
}

function install() {
  local INSTALL_OPTIONAL="$1"

  ensure_conda_envs || return 1
  install_python_packages "${INSTALL_OPTIONAL}" || return 1
  install_iedb || return 1

  if [[ "${INSTALL_OPTIONAL}" -ne 0 ]]; then
    install_optional || return 1
  fi

  install_iris_package || return 1
  check_iris_data || return 1

  echo "conda_wrapper: '${SCRIPT_DIR}/conda_wrapper'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1
  echo "conda_env_2: '${SCRIPT_DIR}/conda_env_2'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1
  echo "conda_env_3: '${SCRIPT_DIR}/conda_env_3'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1
  echo "iris_data: '${SCRIPT_DIR}/IRIS_data'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1
  echo "iedb_path: '${SCRIPT_DIR}/IEDB/mhc_i/src'" \
       >> "${SCRIPT_DIR}/snakemake_config.yaml" || return 1
}

function display_usage() {
  echo "usage:"
  echo "  ./install {core|all}"
  echo ""
  echo "./install core: installs only the required dependencies for the major IRIS modules"
  echo ""
  echo "./install all: installs all dependencies"
}

function main() {
  local INSTALL_OPTIONAL

  if [[ "$#" -ne 1 ]]; then
    echo "exactly one argument required" >&2
    display_usage
    return 1
  elif [[ "$1" = 'core' ]]; then
    INSTALL_OPTIONAL=0
  elif [[ "$1" = 'all' ]]; then
    INSTALL_OPTIONAL=1
  else
    echo "unrecognized argument: $1" >&2
    display_usage
    return 1
  fi

  source set_env_vars.sh || return 1
  install "${INSTALL_OPTIONAL}" || return 1
}

main "$@"
